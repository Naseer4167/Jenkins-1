pipeline {
    agent any
  parameters {
        string(name: 'STACK_SET_NAME', defaultValue: 'MyStackSetNVSGIS', description: 'The name of the CloudFormation StackSet')
        string(name: 'TEMPLATE_FILE', defaultValue: 'cloudformation.yaml', description: 'Path to the CloudFormation template file')
        //string(name: 'PARAMETERS_FILE', defaultValue: 'parameters.json', description: 'Path to the parameters JSON file')
        string(name: 'REGION', defaultValue: 'us-east-1', description: 'AWS region to use')
    }
    environment {
        // AWS_REGION = 'us-east-1' // Change this to your AWS region
       // STACK_SET_NAME = 'MyJenkinsStackName04' // Name of your CloudFormation stack
        // TEMPLATE_FILE = 'cloudformation.yaml' // Path to your CloudFormation template
        AWS_CREDENTIALS_ID = '764a34d6-357d-4fdb-9c3e-fe8925968a89' // Jenkins credential ID for AWS
    }
     
    stages {
        stage('Cleanup Workspace') {
            steps{
                 cleanWs()
            }
        } 
        stage('Setup parameters') {
            steps { 
                script {
                    properties([
                        parameters([
                            choice(
                                choices: ['CREATE','UPDATE'],
                                name: 'OUOperation',
                                description: "Select OU Operation To Create or Update"
                            ),
                            choice(
                                choices: ['I AM NOT AWARE','YES, I HAVE ENSURED PROPER PROCESS IS FOLLOWED'],
                                name: 'Disclaimer',
                                description: "Please ensure that proper ITSM process (RFC/CRQ) is followed incase of any activity in regards to the managed CIs/Servers."
                            ),
                            string(
                                description:'Enter CRQ ID',
                                name:'CRQ ID'
                            ),
                            string(
                                description:'Enter Tag',
                                name:'TAG'
                                
                            )
                         ])
                    ])
                }
            }
        }
        stage('Checkout Code') {
            steps {
                // Clone the repository containing your CloudFormation template
                git branch: 'main', url: 'https://github.com/Naseer4167/Jenkins-1.git'
            }
        }
        stage('Validate Template') {
            steps {
                withAWS(credentials: AWS_CREDENTIALS_ID) {
                    sh """
                     aws cloudformation validate-template \
                        --template-body file://${params.TEMPLATE_FILE} \
                        --region ${params.REGION}
                    """
                }
            }
        }
        stage('Create/Update StackSet') {
            steps {
                withAWS(credentials: AWS_CREDENTIALS_ID) {
                    sh """
                    aws cloudformation create-stack-set \
                       --stack-set-name ${params.STACK_SET_NAME} \
                        --template-body file://${params.TEMPLATE_FILE} \
                        --region ${params.REGION} \
                        --capabilities CAPABILITY_NAMED_IAM
                        
                    """
                }
            }
        }
    }
    post {
        success {
            echo 'CloudFormation stack deployed successfully!'
        }
        failure {
            echo 'Deployment failed. Check the logs for errors.'
        }
    }
}
